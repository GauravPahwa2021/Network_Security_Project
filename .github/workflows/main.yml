name: workflow

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'README.md'


jobs:
    integration:
        name: Continuous Integration
        runs-on: ubuntu-latest
        steps:
            - name: Checkout Code
              uses: actions/checkout@v3

            - name: Lint code
              run: echo "Linting repository"

            - name: Run unit test cases
              run: echo "Running unit tests"
    
    build-and-push-ecr-image:
        name: Continuous Delivery
        needs: integration
        runs-on: ubuntu-latest
        steps:
            - name: Checkout Code
              uses: actions/checkout@v3

            - name: Install Utilities
              run: |
                sudo apt-get update
                sudo apt-get install -y jq unzip

            - name: Configure AWS credentials
              uses: aws-actions/configure-aws-credentials@v1
              with:
                aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY || 'default_secret_access_key' }}
                aws-region: ${{ secrets.AWS_REGION }}

            - name: Login to Amazon ECR
              id: login-ecr
              uses: aws-actions/amazon-ecr-login@v1

            - name: Build, tag, and push image to Amazon ECR Repositry
              id: build-image
              env:
                ECR_REGISTRY: public.ecr.aws/${{ secrets.AWS_ACCOUNT_ID }}  # Use your public ECR account ID here
                ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY_NAME }}          # The repository name in ECR
                IMAGE_TAG: latest
              run: |
                # Build a docker container and push it to ECR so that it can be deployed to ECS.
                docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
                docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
                echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"